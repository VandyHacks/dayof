{"id":"WDSR","dependencies":[{"name":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\package.json","includedInParent":true,"mtime":1540882116534},{"name":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\.babelrc","includedInParent":true,"mtime":1540875229523},{"name":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\node_modules\\mongoose\\package.json","includedInParent":true,"mtime":1539064513239},{"name":"./","loc":{"line":6,"column":28},"parent":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\node_modules\\mongoose\\lib\\error\\divergentArray.js","resolved":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\node_modules\\mongoose\\lib\\error\\index.js"}],"generated":{"js":"var e=require(\"./\");function t(t){var r=\"For your own good, using `document.save()` to update an array which was selected using an $elemMatch projection OR populated using skip, limit, query conditions, or exclusion of the _id field when the operation results in a $pop or $set of the entire array is not supported. The following path(s) would have been modified unsafely:\\n  \"+t.join(\"\\n  \")+\"\\nUse Model.update() to update these arrays instead.\";e.call(this,r),this.name=\"DivergentArrayError\",Error.captureStackTrace?Error.captureStackTrace(this):this.stack=(new Error).stack}t.prototype=Object.create(e.prototype),t.prototype.constructor=e,module.exports=t;","map":{"mappings":[{"source":"node_modules/mongoose/lib/error/divergentArray.js","original":{"line":6,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"MongooseError","original":{"line":6,"column":4},"generated":{"line":1,"column":4}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"require","original":{"line":6,"column":20},"generated":{"line":1,"column":6}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","original":{"line":6,"column":28},"generated":{"line":1,"column":14}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","original":{"line":14,"column":0},"generated":{"line":1,"column":20}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"DivergentArrayError","original":{"line":14,"column":9},"generated":{"line":1,"column":29}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"paths","original":{"line":14,"column":29},"generated":{"line":1,"column":31}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"msg","original":{"line":15,"column":6},"generated":{"line":1,"column":34}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"msg","original":{"line":15,"column":6},"generated":{"line":1,"column":38}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","original":{"line":15,"column":12},"generated":{"line":1,"column":40}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"paths","original":{"line":21,"column":19},"generated":{"line":1,"column":378}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"join","original":{"line":21,"column":25},"generated":{"line":1,"column":380}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","original":{"line":21,"column":30},"generated":{"line":1,"column":385}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","original":{"line":21,"column":40},"generated":{"line":1,"column":393}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"MongooseError","original":{"line":25,"column":2},"generated":{"line":1,"column":448}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"call","original":{"line":25,"column":16},"generated":{"line":1,"column":450}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","original":{"line":25,"column":21},"generated":{"line":1,"column":455}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"msg","original":{"line":25,"column":27},"generated":{"line":1,"column":460}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"name","original":{"line":26,"column":7},"generated":{"line":1,"column":463}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"name","original":{"line":26,"column":7},"generated":{"line":1,"column":468}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","original":{"line":26,"column":14},"generated":{"line":1,"column":473}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"Error","original":{"line":27,"column":6},"generated":{"line":1,"column":495}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"captureStackTrace","original":{"line":27,"column":12},"generated":{"line":1,"column":501}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"Error","original":{"line":28,"column":4},"generated":{"line":1,"column":519}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"captureStackTrace","original":{"line":28,"column":10},"generated":{"line":1,"column":525}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","original":{"line":28,"column":28},"generated":{"line":1,"column":543}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"stack","original":{"line":30,"column":9},"generated":{"line":1,"column":549}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"stack","original":{"line":30,"column":9},"generated":{"line":1,"column":554}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","original":{"line":30,"column":17},"generated":{"line":1,"column":561}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"Error","original":{"line":30,"column":21},"generated":{"line":1,"column":565}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"stack","original":{"line":30,"column":29},"generated":{"line":1,"column":572}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"DivergentArrayError","original":{"line":38,"column":0},"generated":{"line":1,"column":578}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"prototype","original":{"line":38,"column":20},"generated":{"line":1,"column":580}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"Object","original":{"line":38,"column":32},"generated":{"line":1,"column":590}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"create","original":{"line":38,"column":39},"generated":{"line":1,"column":597}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"MongooseError","original":{"line":38,"column":46},"generated":{"line":1,"column":604}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"prototype","original":{"line":38,"column":60},"generated":{"line":1,"column":606}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"DivergentArrayError","original":{"line":39,"column":0},"generated":{"line":1,"column":617}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"prototype","original":{"line":39,"column":20},"generated":{"line":1,"column":619}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"constructor","original":{"line":39,"column":30},"generated":{"line":1,"column":629}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"MongooseError","original":{"line":39,"column":44},"generated":{"line":1,"column":641}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"module","original":{"line":46,"column":0},"generated":{"line":1,"column":643}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"exports","original":{"line":46,"column":7},"generated":{"line":1,"column":650}},{"source":"node_modules/mongoose/lib/error/divergentArray.js","name":"DivergentArrayError","original":{"line":46,"column":17},"generated":{"line":1,"column":658}}],"sources":{"node_modules/mongoose/lib/error/divergentArray.js":"\n/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('./');\n\n/*!\n * DivergentArrayError constructor.\n *\n * @inherits MongooseError\n */\n\nfunction DivergentArrayError(paths) {\n  var msg = 'For your own good, using `document.save()` to update an array '\n          + 'which was selected using an $elemMatch projection OR '\n          + 'populated using skip, limit, query conditions, or exclusion of '\n          + 'the _id field when the operation results in a $pop or $set of '\n          + 'the entire array is not supported. The following '\n          + 'path(s) would have been modified unsafely:\\n'\n          + '  ' + paths.join('\\n  ') + '\\n'\n          + 'Use Model.update() to update these arrays instead.';\n  // TODO write up a docs page (FAQ) and link to it\n\n  MongooseError.call(this, msg);\n  this.name = 'DivergentArrayError';\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nDivergentArrayError.prototype = Object.create(MongooseError.prototype);\nDivergentArrayError.prototype.constructor = MongooseError;\n\n\n/*!\n * exports\n */\n\nmodule.exports = DivergentArrayError;\n"},"lineCount":null}},"hash":"0b5d38b1adf37ad5a10381d3a510dc7a","cacheData":{"env":{}}}