{"id":"GKlb","dependencies":[{"name":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\package.json","includedInParent":true,"mtime":1540882116534},{"name":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\.babelrc","includedInParent":true,"mtime":1540875229523},{"name":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\node_modules\\mongoose\\package.json","includedInParent":true,"mtime":1539064513239},{"name":"../schematype","loc":{"line":7,"column":27},"parent":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\node_modules\\mongoose\\lib\\schema\\boolean.js","resolved":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\node_modules\\mongoose\\lib\\schematype.js"},{"name":"../cast/boolean","loc":{"line":8,"column":28},"parent":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\node_modules\\mongoose\\lib\\schema\\boolean.js","resolved":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\node_modules\\mongoose\\lib\\cast\\boolean.js"},{"name":"../utils","loc":{"line":9,"column":22},"parent":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\node_modules\\mongoose\\lib\\schema\\boolean.js","resolved":"C:\\Users\\kzhai\\VandyHacks\\vandyhacksnotifications\\node_modules\\mongoose\\lib\\utils.js"}],"generated":{"js":"\"use strict\";const t=require(\"../schematype\"),o=require(\"../cast/boolean\"),e=require(\"../utils\");function r(o,e){t.call(this,o,e,\"Boolean\")}r.schemaName=\"Boolean\",r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.prototype.checkRequired=function(t){return!0===t||!1===t},r.prototype.cast=function(t){return o(t,this.path)},r.$conditionalHandlers=e.options(t.prototype.$conditionalHandlers,{}),r.prototype.castForQuery=function(t,o){var e;return 2===arguments.length?(e=r.$conditionalHandlers[t])?e.call(this,o):this._castForQuery(o):this._castForQuery(t)},module.exports=r;","map":{"mappings":[{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":7,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaType","original":{"line":7,"column":6},"generated":{"line":1,"column":19}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"require","original":{"line":7,"column":19},"generated":{"line":1,"column":21}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":7,"column":27},"generated":{"line":1,"column":29}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"castBoolean","original":{"line":8,"column":6},"generated":{"line":1,"column":46}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"require","original":{"line":8,"column":20},"generated":{"line":1,"column":48}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":8,"column":28},"generated":{"line":1,"column":56}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"utils","original":{"line":9,"column":6},"generated":{"line":1,"column":75}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"require","original":{"line":9,"column":14},"generated":{"line":1,"column":77}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":9,"column":22},"generated":{"line":1,"column":85}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":20,"column":0},"generated":{"line":1,"column":97}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaBoolean","original":{"line":20,"column":9},"generated":{"line":1,"column":106}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"path","original":{"line":20,"column":23},"generated":{"line":1,"column":108}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"options","original":{"line":20,"column":29},"generated":{"line":1,"column":110}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaType","original":{"line":21,"column":2},"generated":{"line":1,"column":113}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"call","original":{"line":21,"column":13},"generated":{"line":1,"column":115}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":21,"column":18},"generated":{"line":1,"column":120}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"path","original":{"line":21,"column":24},"generated":{"line":1,"column":125}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"options","original":{"line":21,"column":30},"generated":{"line":1,"column":127}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":21,"column":39},"generated":{"line":1,"column":129}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaBoolean","original":{"line":30,"column":0},"generated":{"line":1,"column":140}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"schemaName","original":{"line":30,"column":14},"generated":{"line":1,"column":142}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":30,"column":27},"generated":{"line":1,"column":153}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaBoolean","original":{"line":35,"column":0},"generated":{"line":1,"column":163}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"prototype","original":{"line":35,"column":14},"generated":{"line":1,"column":165}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"Object","original":{"line":35,"column":26},"generated":{"line":1,"column":175}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"create","original":{"line":35,"column":33},"generated":{"line":1,"column":182}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaType","original":{"line":35,"column":40},"generated":{"line":1,"column":189}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"prototype","original":{"line":35,"column":51},"generated":{"line":1,"column":191}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaBoolean","original":{"line":36,"column":0},"generated":{"line":1,"column":202}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"prototype","original":{"line":36,"column":14},"generated":{"line":1,"column":204}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"constructor","original":{"line":36,"column":24},"generated":{"line":1,"column":214}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaBoolean","original":{"line":36,"column":38},"generated":{"line":1,"column":226}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaBoolean","original":{"line":48,"column":0},"generated":{"line":1,"column":228}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"prototype","original":{"line":48,"column":14},"generated":{"line":1,"column":230}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"checkRequired","original":{"line":48,"column":24},"generated":{"line":1,"column":240}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":48,"column":40},"generated":{"line":1,"column":254}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"value","original":{"line":48,"column":49},"generated":{"line":1,"column":263}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"value","original":{"line":49,"column":9},"generated":{"line":1,"column":266}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":49,"column":19},"generated":{"line":1,"column":273}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"value","original":{"line":49,"column":9},"generated":{"line":1,"column":277}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":49,"column":37},"generated":{"line":1,"column":281}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"value","original":{"line":49,"column":27},"generated":{"line":1,"column":285}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaBoolean","original":{"line":60,"column":0},"generated":{"line":1,"column":288}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"prototype","original":{"line":60,"column":14},"generated":{"line":1,"column":290}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"cast","original":{"line":60,"column":24},"generated":{"line":1,"column":300}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":60,"column":31},"generated":{"line":1,"column":305}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"value","original":{"line":60,"column":40},"generated":{"line":1,"column":314}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"castBoolean","original":{"line":61,"column":9},"generated":{"line":1,"column":317}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"castBoolean","original":{"line":61,"column":9},"generated":{"line":1,"column":324}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"value","original":{"line":61,"column":21},"generated":{"line":1,"column":326}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":61,"column":28},"generated":{"line":1,"column":328}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"path","original":{"line":61,"column":33},"generated":{"line":1,"column":333}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaBoolean","original":{"line":64,"column":0},"generated":{"line":1,"column":340}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"$conditionalHandlers","original":{"line":64,"column":14},"generated":{"line":1,"column":342}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"utils","original":{"line":65,"column":4},"generated":{"line":1,"column":363}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"options","original":{"line":65,"column":10},"generated":{"line":1,"column":365}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaType","original":{"line":65,"column":18},"generated":{"line":1,"column":373}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"prototype","original":{"line":65,"column":29},"generated":{"line":1,"column":375}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"$conditionalHandlers","original":{"line":65,"column":39},"generated":{"line":1,"column":385}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":65,"column":61},"generated":{"line":1,"column":406}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaBoolean","original":{"line":75,"column":0},"generated":{"line":1,"column":410}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"prototype","original":{"line":75,"column":14},"generated":{"line":1,"column":412}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"castForQuery","original":{"line":75,"column":24},"generated":{"line":1,"column":422}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":75,"column":39},"generated":{"line":1,"column":435}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"$conditional","original":{"line":75,"column":48},"generated":{"line":1,"column":444}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"val","original":{"line":75,"column":62},"generated":{"line":1,"column":446}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"handler","original":{"line":76,"column":6},"generated":{"line":1,"column":449}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"handler","original":{"line":76,"column":6},"generated":{"line":1,"column":453}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"arguments","original":{"line":77,"column":6},"generated":{"line":1,"column":455}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":77,"column":27},"generated":{"line":1,"column":462}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"arguments","original":{"line":77,"column":6},"generated":{"line":1,"column":466}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"length","original":{"line":77,"column":16},"generated":{"line":1,"column":476}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"handler","original":{"line":78,"column":4},"generated":{"line":1,"column":484}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaBoolean","original":{"line":78,"column":14},"generated":{"line":1,"column":486}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"$conditionalHandlers","original":{"line":78,"column":28},"generated":{"line":1,"column":488}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"$conditional","original":{"line":78,"column":49},"generated":{"line":1,"column":509}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"handler","original":{"line":81,"column":13},"generated":{"line":1,"column":513}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"call","original":{"line":81,"column":21},"generated":{"line":1,"column":515}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":81,"column":26},"generated":{"line":1,"column":520}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"val","original":{"line":81,"column":32},"generated":{"line":1,"column":525}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":84,"column":11},"generated":{"line":1,"column":528}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"_castForQuery","original":{"line":84,"column":16},"generated":{"line":1,"column":533}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"val","original":{"line":84,"column":30},"generated":{"line":1,"column":547}},{"source":"node_modules/mongoose/lib/schema/boolean.js","original":{"line":87,"column":9},"generated":{"line":1,"column":550}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"_castForQuery","original":{"line":87,"column":14},"generated":{"line":1,"column":555}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"$conditional","original":{"line":87,"column":28},"generated":{"line":1,"column":569}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"module","original":{"line":94,"column":0},"generated":{"line":1,"column":573}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"exports","original":{"line":94,"column":7},"generated":{"line":1,"column":580}},{"source":"node_modules/mongoose/lib/schema/boolean.js","name":"SchemaBoolean","original":{"line":94,"column":17},"generated":{"line":1,"column":588}}],"sources":{"node_modules/mongoose/lib/schema/boolean.js":"'use strict';\n\n/*!\n * Module dependencies.\n */\n\nconst SchemaType = require('../schematype');\nconst castBoolean = require('../cast/boolean');\nconst utils = require('../utils');\n\n/**\n * Boolean SchemaType constructor.\n *\n * @param {String} path\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaBoolean(path, options) {\n  SchemaType.call(this, path, options, 'Boolean');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaBoolean.schemaName = 'Boolean';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaBoolean.prototype = Object.create(SchemaType.prototype);\nSchemaBoolean.prototype.constructor = SchemaBoolean;\n\n/**\n * Check if the given value satisfies a required validator. For a boolean\n * to satisfy a required validator, it must be strictly equal to true or to\n * false.\n *\n * @param {Any} value\n * @return {Boolean}\n * @api public\n */\n\nSchemaBoolean.prototype.checkRequired = function(value) {\n  return value === true || value === false;\n};\n\n/**\n * Casts to boolean\n *\n * @param {Object} value\n * @param {Object} model - this value is optional\n * @api private\n */\n\nSchemaBoolean.prototype.cast = function(value) {\n  return castBoolean(value, this.path);\n};\n\nSchemaBoolean.$conditionalHandlers =\n    utils.options(SchemaType.prototype.$conditionalHandlers, {});\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} val\n * @api private\n */\n\nSchemaBoolean.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = SchemaBoolean.$conditionalHandlers[$conditional];\n\n    if (handler) {\n      return handler.call(this, val);\n    }\n\n    return this._castForQuery(val);\n  }\n\n  return this._castForQuery($conditional);\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaBoolean;\n"},"lineCount":null}},"hash":"abb59cc831ed9be7555aee3b0ea9c84b","cacheData":{"env":{}}}